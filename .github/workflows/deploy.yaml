# name: Deploy

# on:
#     # Trigger the workflow on push or pull request,
#     # but only for the main branch
#     push:
#         branches:
#             - master
# env:
#     YARN_CACHE_DIR: /tmp/yarn-cache-folder
# jobs:
#     docker-push:
#         runs-on: ubuntu-latest
#         steps:
#             - uses: actions/checkout@v2

#             - name: Make envfile
#               uses: SpicyPizza/create-envfile@v1
#               with:
#                   envkey_ORIGIN: ${{ secrets.ORIGIN }}
#                   envkey_PORT: ${{ secrets.PORT }}
#                   envkey_NODE_ENV: ${{ secrets.NODE_ENV }}
#                   envkey_DB_URL: ${{ secrets.DB_URL }}
#                   envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
#                   envkey_COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
#                   envKey_DEBUG: prytaneum:*
#                   file_name: .env

#             - name: Set up Docker Buildx
#               if: ${{ !env.ACT }}
#               uses: docker/setup-buildx-action@v1

#             - name: Setup cache for docker layers
#               id: docker-layer-cache
#               uses: actions/cache@v2
#               with:
#                   path: /tmp/.buildx-cache
#                   key: ${{ runner.os }}-buildx-${{ github.sha }}
#                   restore-keys: |
#                       ${{ runner.os }}-buildx-

#             - name: Build docker image
#               uses: docker/build-push-action@v2
#               id: docker-build
#               with:
#                   context: .
#                   file: ./Dockerfile
#                   load: true
#                   tags: ${{ secrets.GCP_SERVER }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/${{ secrets.GCP_IMAGE }}:${{ github.sha }}
#                   cache-from: type=local,src=/tmp/.buildx-cache
#                   cache-to: type=local,dest=/tmp/.buildx-cache

#             - name: Setup gcloud
#               uses: google-github-actions/setup-gcloud@v0.2.0
#               with:
#                   project_id: ${{ secrets.GCP_PROJECT_ID }}
#                   service_account_key: ${{ secrets.GAR_JSON_KEY }}
#                   export_default_credentials: true

#             - name: Push container to gcloud
#               run: |
#                   gcloud auth configure-docker ${{ secrets.GCP_SERVER }}-docker.pkg.dev
#                   docker push ${{ secrets.GCP_SERVER }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/${{ secrets.GCP_IMAGE }}:${{ github.sha }}

#             # - name: Build
#             #   run: docker build -t ${{ secrets.GCP_SERVER }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/${{ secrets.GCP_IMAGE }}:$GITHUB_SHA .

#             # - name: Configure gcloud and push
#             #   run: |
#             #       gcloud auth configure-docker ${{ secrets.GCP_SERVER }}-docker.pkg.dev
#             #       docker push ${{ secrets.GCP_SERVER }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/${{ secrets.GCP_IMAGE }}:$GITHUB_SHA
